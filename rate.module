<?php

/**
 * @file
 * Hook implementation code for the Rate module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\node\Entity\NodeType;

// @Todo add closed and extra info.

/**
 * Implements hook_entity_extra_field_info().
 */
function rate_entity_extra_field_info() {
  $config = \Drupal::config('rate.settings');

  foreach (NodeType::loadMultiple() as $node_type) {
    $config_id = 'node_' . $node_type->id() . '_available';
    if ($config->get($config_id, FALSE)) {
      $extra['node'][$node_type->Id()]['display']['rate_vote_widget'] = array(
        'label' => t('Rate Vote Widget'),
        'description' => t('Displays the rate voting widget selected from the settings page.'),
        'weight' => 100,
        'visible' => TRUE,
      );
    }
  }

  return $extra;
}

/**
 * Implements hook_entity_view_alter().
 */
function rate_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('rate_vote_widget')) {
    $vote_widget_service = \Drupal::service('rate.entity.vote_widget');
    $vote_widget = $vote_widget_service->buildRateVotingWidget(
      $entity->id(),
      $entity->getEntityTypeId(),
      $entity->bundle()
    );
    $build = array_merge($build, $vote_widget);
  }
}

/**
 * Implements hook_theme().
 */
function rate_theme($existing, $type, $theme, $path) {
  return array(
    // Templates for default widget types.
    'rate_template_thumbs_up' => array(
      'variables' => [
        'up_votes' => 0,
        'use_ajax' => FALSE,
        'can_vote' => FALSE,
        'has_voted' => FALSE,
        'entity_id' => NULL,
        'entity_type_id' => NULL,
      ],
      'template' => 'rate-template-thumbs-up',
    ),
    'rate_template_thumbs_up_down' => array(
      'variables' => [
        'up_votes' => 0,
        'down_votes' => 0,
        'use_ajax' => FALSE,
        'can_vote' => FALSE,
        'has_voted' => FALSE,
        'entity_id' => NULL,
        'entity_type_id' => NULL,
      ],
      'template' => 'rate-template-thumbs-up-down',
    ),
    'rate_template_number_up_down' => [
      'variables' => [
        'up_votes' => 0,
        'down_votes' => 0,
        'use_ajax' => FALSE,
        'can_vote' => FALSE,
        'has_voted' => FALSE,
        'entity_id' => NULL,
        'entity_type_id' => NULL,
      ],
      'template' => 'rate-template-number-up-down',
    ],
    'rate_template_fivestar' => array(
      'variables' => [
        'star1_votes' => 0,
        'star2_votes' => 0,
        'star3_votes' => 0,
        'star4_votes' => 0,
        'star5_votes' => 0,
        'use_ajax' => FALSE,
        'can_vote' => FALSE,
        'has_voted' => FALSE,
        'entity_id' => NULL,
        'entity_type_id' => NULL,
      ],
      'template' => 'rate-template-fivestar',
    ),
    'rate_template_yesno' => array(
      'variables' => [
        'up_votes' => 0,
        'down_votes' => 0,
        'use_ajax' => FALSE,
        'can_vote' => FALSE,
        'has_voted' => FALSE,
        'entity_id' => NULL,
        'entity_type_id' => NULL,
      ],
      'template' => 'rate-template-yesno',
    ),
  );
}

/**
 * Implements hook_preprocess_HOOK() for rate-template-number-up-down.html.twig.
 */
function template_preprocess_rate_template_number_up_down(&$variables) {
  $up_class = 'rate-number-up-down-btn-up';
  $variables['up_button'] = [
    '#markup' => '<div class="' . $up_class . '">' . t('Up') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $up_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['up_button'] = Link::fromTextAndUrl(
      'Up',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'up',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $up_class],
      ])
    );
  }

  $down_class = 'rate-number-up-down-btn-down';
  $variables['down_button'] = [
    '#markup' => '<div class="' . $down_class . '">' . t('Down') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $down_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['down_button'] = Link::fromTextAndUrl(
      'Down',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'down',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $down_class],
      ])
    );
  }

  $score = $variables['up_votes'] - $variables['down_votes'];
  if ($score > 0) {
    $score = '+' . $score;
    $score_class = 'positive';
  }
  elseif ($score < 0) {
    $score = $score;
    $score_class = 'negative';
  }
  else {
    $score_class = 'neutral';
  }
  $variables['score'] = $score;
  $variables['score_class'] = $score_class;

  $variables['undo'] = _rate_get_undo_link($variables);
  $variables['#attached']['library'][] = 'rate/number-up-down';
}

/**
 * Implements hook_preprocess_HOOK() for rate-template-fivestar.html.twig.
 */
function template_preprocess_rate_template_fivestar(&$variables) {
  $stars = [];

  // Calculate the score.
  $score = 0;
  $total_votes = 0;
  for ($counter = 1; $counter < 6; $counter++) {
    $score += ($variables['star' . $counter . '_votes'] * $counter);
    $total_votes += $variables['star' . $counter . '_votes'];
  }
  if ($score > 0 && $total_votes > 0) {
    $score = round($score / $total_votes);
  }

  // Set up the links.
  for ($counter = 1; $counter < 6; $counter++) {
    if ($counter <= $score) {
      $class = 'rate-fivestar-btn-filled';
    }
    else {
      $class = 'rate-fivestar-btn-empty';
    }
    $class .= ' rate-fivestar-' . ($counter + 1);

    if ($variables['can_vote'] && !$variables['has_voted']) {
      if ($variables['use_ajax']) {
        $class .= ' use-ajax';
      }

      $stars[] = Link::fromTextAndUrl(
        'Stars ' . $counter,
        Url::fromRoute('rate.vote', [
          'entity_type_id' => $variables['entity_type_id'],
          'vote_type_id' => 'star' . $counter,
          'entity_id' => $variables['entity_id'],
          'destination' => drupal_get_destination()['destination'],
        ], [
          'attributes' => ['class' => $class],
        ])
      );
    }
    else {
      $stars[] = [
        '#markup' => '<div class="' . $class . '">' . t('Star') . '</div>',
      ];
    }
  }

  $variables['stars'] = [
    '#theme' => 'item_list',
    '#items' => $stars,
  ];

  $variables['undo'] = _rate_get_undo_link($variables);
  $variables['#attached']['library'][] = 'rate/fivestar';
}

/**
 * Implements hook_preprocess_HOOK() for rate-template-thumbs_up_down.html.twig.
 */
function template_preprocess_rate_template_thumbs_up_down(&$variables) {
  $up_class = 'rate-thumbs-up-down-btn-up';
  $variables['up_button'] = [
    '#markup' => '<div class="' . $up_class . '">' . t('Up') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $up_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['up_button'] = Link::fromTextAndUrl(
      'Up',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'up',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $up_class],
      ])
    );
  }

  $down_class = 'rate-thumbs-up-down-btn-down';
  $variables['down_button'] = [
    '#markup' => '<div class="' . $down_class . '">' . t('Down') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $down_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['down_button'] = Link::fromTextAndUrl(
      'Down',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'down',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $down_class],
      ])
    );
  }

  $total_votes = $variables['up_votes'] + $variables['down_votes'];
  $variables['up_percent'] = round(($variables['up_votes'] / $total_votes) * 100);
  $variables['down_percent'] = round(($variables['down_votes'] / $total_votes) * 100);
  $variables['undo'] = _rate_get_undo_link($variables);
  $variables['#attached']['library'][] = 'rate/thumbs-up-down';
}

/**
 * Implements hook_preprocess_HOOK() for rate-template-thumbs_up.html.twig.
 */
function template_preprocess_rate_template_thumbs_up(&$variables) {
  $up_class = 'rate-thumbs-up-btn-up';
  $variables['up_button'] = [
    '#markup' => '<div class="' . $up_class . '">' . t('Up') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $up_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['up_button'] = Link::fromTextAndUrl(
      'Up',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'up',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $up_class],
      ])
    );
  }

  $variables['undo'] = _rate_get_undo_link($variables);
  $variables['#attached']['library'][] = 'rate/thumbs-up';
}

/**
 * Implements hook_preprocess_HOOK() for rate-template-yes_no.html.twig.
 */
function template_preprocess_rate_template_yesno(&$variables) {
  $yes_class = 'rate-yesno-btn rate-yes-btn';
  $variables['yes_button'] = [
    '#markup' => '<div class="' . $yes_class . '">' . t('Yes') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $yes_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['yes_button'] = Link::fromTextAndUrl(
      'Yes',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'up',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $yes_class],
      ])
    );
  }

  $no_class = 'rate-yesno-btn rate-no-btn';
  $variables['no_button'] = [
    '#markup' => '<div class="' . $no_class . '">' . t('No') . '</div>',
  ];
  if ($variables['use_ajax']) {
    $no_class .= ' use-ajax';
  }

  if ($variables['can_vote'] && !$variables['has_voted']) {
    $variables['no_button'] = Link::fromTextAndUrl(
      'No',
      Url::fromRoute('rate.vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'vote_type_id' => 'down',
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $no_class],
      ])
    );
  }

  $variables['undo'] = _rate_get_undo_link($variables);
  $variables['#attached']['library'][] = 'rate/yesno';
}

/**
 * Helper function to return an undo link.
 */
function _rate_get_undo_link($variables) {
  $class = 'rate-undo';
  if ($variables['use_ajax']) {
    $class .= ' use-ajax';
  }
  if ($variables['has_voted']) {
    return Link::fromTextAndUrl(
      'Undo',
      Url::fromRoute('rate.undo_vote', [
        'entity_type_id' => $variables['entity_type_id'],
        'entity_id' => $variables['entity_id'],
        'destination' => drupal_get_destination()['destination'],
      ], [
        'attributes' => ['class' => $class],
      ])
    );
  }
  return '';
}
